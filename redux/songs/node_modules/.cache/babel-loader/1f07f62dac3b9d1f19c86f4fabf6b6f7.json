{"ast":null,"code":"var _jsxFileName = \"/Users/lucasbarbosa/Documents/MainDrive/Programming/JavaScript/react/redux/songs/src/components/SongList.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectSong } from \"../actions\";\n\nclass SongList extends React.Component {\n  renderList() {\n    return this.props.songs.map(song => {\n      return React.createElement(\"div\", {\n        className: \"item\",\n        key: song.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"right floated content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => this.props.selectSong(song),\n        className: \"ui button primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, \"Select\")), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, song.title), this.props.songs);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ui divided list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, this.renderList());\n  }\n\n}\n/**\n * Transfers app state to component state on-screen\n * via props (example above: this.props.selectSong(song))\n * (State -> Props) which is completed through connect()()\n */\n\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    songs: state.songs\n  };\n};\n/**\n * connect()() is an example of nested functions()()()...()\n * connect is linking all components to the react-redux\n * Provider which then links to the redux store\n */\n\n\nexport default connect(mapStateToProps, {\n  selectSong: selectSong\n})(SongList);","map":{"version":3,"sources":["/Users/lucasbarbosa/Documents/MainDrive/Programming/JavaScript/react/redux/songs/src/components/SongList.js"],"names":["React","connect","selectSong","SongList","Component","renderList","props","songs","map","song","title","render","mapStateToProps","state","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,YAA3B;;AAEA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AACrCC,EAAAA,UAAU,GAAG;AACX,WAAO,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAqBC,IAAI,IAAI;AAClC,aACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,GAAG,EAAEA,IAAI,CAACC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,OAAO,EAAE,MAAM,KAAKJ,KAAL,CAAWJ,UAAX,CAAsBO,IAAtB,CADjB;AAEE,QAAA,SAAS,EAAC,mBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,EASE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BA,IAAI,CAACC,KAA/B,CATF,EAUG,KAAKJ,KAAL,CAAWC,KAVd,CADF;AAcD,KAfM,CAAP;AAgBD;;AAEDI,EAAAA,MAAM,GAAG;AACP,WAAO;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkC,KAAKN,UAAL,EAAlC,CAAP;AACD;;AAtBoC;AAyBvC;;;;;;;AAKA,MAAMO,eAAe,GAAGC,KAAK,IAAI;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAO;AACLN,IAAAA,KAAK,EAAEM,KAAK,CAACN;AADR,GAAP;AAGD,CALD;AAOA;;;;;;;AAKA,eAAeN,OAAO,CAACW,eAAD,EAAkB;AACtCV,EAAAA,UAAU,EAAEA;AAD0B,CAAlB,CAAP,CAEZC,QAFY,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectSong } from \"../actions\";\n\nclass SongList extends React.Component {\n  renderList() {\n    return this.props.songs.map(song => {\n      return (\n        <div className=\"item\" key={song.title}>\n          <div className=\"right floated content\">\n            <button\n              onClick={() => this.props.selectSong(song)}\n              className=\"ui button primary\"\n            >\n              Select\n            </button>\n          </div>\n          <div className=\"content\">{song.title}</div>\n          {this.props.songs}\n        </div>\n      );\n    });\n  }\n\n  render() {\n    return <div className=\"ui divided list\">{this.renderList()}</div>;\n  }\n}\n\n/**\n * Transfers app state to component state on-screen\n * via props (example above: this.props.selectSong(song))\n * (State -> Props) which is completed through connect()()\n */\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    songs: state.songs\n  };\n};\n\n/**\n * connect()() is an example of nested functions()()()...()\n * connect is linking all components to the react-redux\n * Provider which then links to the redux store\n */\nexport default connect(mapStateToProps, {\n  selectSong: selectSong\n})(SongList);\n"]},"metadata":{},"sourceType":"module"}